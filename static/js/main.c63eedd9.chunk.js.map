{"version":3,"sources":["client/BoardSection.tsx","client/SquareType.tsx","client/SquareData.tsx","client/NyTheme.tsx","client/squares/AirportDisplay.tsx","client/squares/ChanceDisplay.tsx","client/squares/ColorBar.tsx","client/squares/PropertyDisplay.tsx","client/squares/CentralParkDisplay.tsx","client/squares/GoDisplay.tsx","client/squares/UtilityDisplay.tsx","client/SquareInfo.tsx","client/GameSquare.tsx","client/GameBoard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BoardSection","SquareType","squareGroupColorMap","Map","SquareConfigData","set","type","Go","section","Bottom","Property","groupId","Chance","Airport","Jail","Left","Utility","CentralPark","Top","GoToJail","Right","NyThemeData","name","icon","AirportDisplay","id","txt","get","Fragment","className","faPlane","size","ChanceDisplay","faQuestion","color","ColorBar","PropertyDisplay","CentralParkDisplay","GoDisplay","faHandPointLeft","UtilityDisplay","faSubway","faLightbulb","SquareInfo","GameSquare","squareType","sectionMap","squareTypeClass","GameBoard","num_squares","Array","from","map","n","index","key","href","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c63eedd9.chunk.js","sourcesContent":["export enum BoardSection {\r\n  Top = 1,\r\n  Right = 2,\r\n  Left = 3,\r\n  Bottom = 4,\r\n}\r\n","export enum SquareType {\r\n  Property = 1,\r\n  Airport = 2,\r\n  Jail = 3,\r\n  Go = 4,\r\n  Chance = 5,\r\n  GoToJail = 6,\r\n  CentralPark = 7,\r\n  Utility = 8\r\n}\r\n","import { SquareType } from \"./SquareType\";\r\nimport { BoardSection } from \"./BoardSection\";\r\n\r\ninterface SquareConfigData {\r\n  readonly type: SquareType;\r\n  readonly section: BoardSection;\r\n  readonly groupId?: number;\r\n}\r\n\r\nconst squareGroupColorMap = new Map<number, string>([\r\n  [1, \"dark-purple\"], [2, \"light-blue\"], [3, \"purple\"], [4, \"orange\"], [5, \"red\"], [6, \"yellow\"], [7, \"green\"], [8, \"dark-blue\"],\r\n  [15, \"island-color\"]\r\n]);\r\n\r\n\r\n\r\nconst SquareConfigData = new Map<number, SquareConfigData>();\r\nSquareConfigData.set(1, { type: SquareType.Go, section: BoardSection.Bottom });\r\nSquareConfigData.set(2, { type: SquareType.Property, section: BoardSection.Bottom, groupId: 1 });\r\nSquareConfigData.set(3, { type: SquareType.Chance, section: BoardSection.Bottom });\r\nSquareConfigData.set(4, { type: SquareType.Property, section: BoardSection.Bottom, groupId: 1 });\r\nSquareConfigData.set(5, { type: SquareType.Property, section: BoardSection.Bottom, groupId: 15 });\r\n\r\nSquareConfigData.set(6, { type: SquareType.Airport, section: BoardSection.Bottom, groupId: 10 });\r\n\r\nSquareConfigData.set(7, { type: SquareType.Property, section: BoardSection.Bottom, groupId: 2 });\r\nSquareConfigData.set(8, { type: SquareType.Chance, section: BoardSection.Bottom });\r\nSquareConfigData.set(9, { type: SquareType.Property, section: BoardSection.Bottom, groupId: 2 });\r\nSquareConfigData.set(10, { type: SquareType.Property, section: BoardSection.Bottom, groupId: 2 });\r\n\r\nSquareConfigData.set(11, { type: SquareType.Jail, section: BoardSection.Bottom });\r\n\r\nSquareConfigData.set(12, { type: SquareType.Property, section: BoardSection.Left, groupId: 3 });\r\nSquareConfigData.set(13, { type: SquareType.Chance, section: BoardSection.Left });\r\nSquareConfigData.set(14, { type: SquareType.Property, section: BoardSection.Left, groupId: 3 });\r\nSquareConfigData.set(15, { type: SquareType.Property, section: BoardSection.Left, groupId: 3 });\r\n\r\nSquareConfigData.set(16, { type: SquareType.Airport, section: BoardSection.Left, groupId: 10 });\r\n\r\nSquareConfigData.set(17, { type: SquareType.Property, section: BoardSection.Left, groupId: 4 });\r\nSquareConfigData.set(18, { type: SquareType.Utility, section: BoardSection.Left });\r\nSquareConfigData.set(19, { type: SquareType.Property, section: BoardSection.Left, groupId: 4 });\r\nSquareConfigData.set(20, { type: SquareType.Property, section: BoardSection.Left, groupId: 4 });\r\n\r\nSquareConfigData.set(21, { type: SquareType.CentralPark, section: BoardSection.Top });\r\n\r\nSquareConfigData.set(22, { type: SquareType.Property, section: BoardSection.Top, groupId: 5 });\r\nSquareConfigData.set(23, { type: SquareType.Chance, section: BoardSection.Top });\r\nSquareConfigData.set(24, { type: SquareType.Property, section: BoardSection.Top, groupId: 5 });\r\nSquareConfigData.set(25, { type: SquareType.Property, section: BoardSection.Top, groupId: 5 });\r\n\r\nSquareConfigData.set(26, { type: SquareType.Airport, section: BoardSection.Top, groupId: 10 });\r\n\r\nSquareConfigData.set(27, { type: SquareType.Property, section: BoardSection.Top, groupId: 6 });\r\nSquareConfigData.set(28, { type: SquareType.Chance, section: BoardSection.Top });\r\nSquareConfigData.set(29, { type: SquareType.Property, section: BoardSection.Top, groupId: 6 });\r\nSquareConfigData.set(30, { type: SquareType.Property, section: BoardSection.Top, groupId: 6 });\r\n\r\nSquareConfigData.set(31, { type: SquareType.GoToJail, section: BoardSection.Top });\r\n\r\nSquareConfigData.set(32, { type: SquareType.Property, section: BoardSection.Right, groupId: 7 });\r\nSquareConfigData.set(33, { type: SquareType.Chance, section: BoardSection.Right });\r\nSquareConfigData.set(34, { type: SquareType.Property, section: BoardSection.Right, groupId: 7 });\r\nSquareConfigData.set(35, { type: SquareType.Property, section: BoardSection.Right, groupId: 7 });\r\n\r\nSquareConfigData.set(36, { type: SquareType.Airport, section: BoardSection.Right, groupId: 10 });\r\n\r\nSquareConfigData.set(37, { type: SquareType.Utility, section: BoardSection.Right });\r\n\r\nSquareConfigData.set(38, { type: SquareType.Property, section: BoardSection.Right, groupId: 8 });\r\nSquareConfigData.set(39, { type: SquareType.Chance, section: BoardSection.Right });\r\nSquareConfigData.set(40, { type: SquareType.Property, section: BoardSection.Right, groupId: 8 });\r\n\r\nexport { SquareConfigData, squareGroupColorMap };","interface SquareThemeData {\r\n  readonly name: string;\r\n  readonly icon?: string;\r\n}\r\n\r\nexport const NyThemeData = new Map<number, SquareThemeData>();\r\nNyThemeData.set(1, { name: \"<- Go\" });\r\nNyThemeData.set(2, { name: \"Gravesend\" });\r\nNyThemeData.set(4, { name: \"Sheepshead bay\" });\r\n\r\nNyThemeData.set(5, { name: \"Governors Island\" });\r\n\r\nNyThemeData.set(6, { name: \"JFK\" });\r\n\r\n\r\nNyThemeData.set(7, { name: \"Canarsie\" });\r\nNyThemeData.set(9, { name: \"Brownsville\" });\r\nNyThemeData.set(10, { name: \"Bushwick\" });\r\n\r\nNyThemeData.set(12, { name: \"Forest Hills\" });\r\nNyThemeData.set(14, { name: \"Rego Park\" });\r\nNyThemeData.set(15, { name: \"Astoria\" });\r\n\r\nNyThemeData.set(16, { name: \"Newark\" });\r\n\r\nNyThemeData.set(17, { name: \"Dumbo\" });\r\nNyThemeData.set(18, { name: \"MTA\", icon: \"subway\" });\r\nNyThemeData.set(19, { name: \"Clinton Hill\" });\r\nNyThemeData.set(20, { name: \"Park Slope\" });\r\n\r\nNyThemeData.set(22, { name: \"Hell's Kitchen\" });\r\nNyThemeData.set(24, { name: \"Chelsea\" });\r\nNyThemeData.set(25, { name: \"West Village\" });\r\n\r\nNyThemeData.set(26, { name: \"La Guardia\" });\r\n\r\nNyThemeData.set(27, { name: \"Gramercy\" });\r\nNyThemeData.set(29, { name: \"Chinatown\" });\r\nNyThemeData.set(30, { name: \"Greenwich Village\" });\r\n\r\nNyThemeData.set(32, { name: \"Times Square\" });\r\nNyThemeData.set(34, { name: \"Midtown\" });\r\nNyThemeData.set(35, { name: \"Columbus Circle\" });\r\n\r\nNyThemeData.set(36, { name: \"Albany\" });\r\n\r\nNyThemeData.set(37, { name: \"Con Edison\" });\r\n\r\nNyThemeData.set(38, { name: \"Tribeca\" });\r\nNyThemeData.set(40, { name: \"Wall Street\" });\r\n","import React from \"react\";\r\nimport { NyThemeData } from \"../NyTheme\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlane } from '@fortawesome/free-solid-svg-icons'\r\n\r\ninterface Props {\r\n    id: number;\r\n}\r\n\r\nexport const AirportDisplay: React.FC<Props> = ({ id }) => {\r\n\r\n    const txt: string | undefined = NyThemeData.get(id)?.name;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"blank\"></div>\r\n            <div className=\"icon\">\r\n                <FontAwesomeIcon icon={faPlane} size=\"3x\" />\r\n            </div>\r\n            <div className=\"square-name\"> {txt}</div>\r\n        </React.Fragment>\r\n    );\r\n\r\n};","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestion } from '@fortawesome/free-solid-svg-icons'\r\n\r\ninterface Props {\r\n    id: number;\r\n}\r\n\r\nexport const ChanceDisplay: React.FC<Props> = ({ id }) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"blank\"></div>\r\n            <div className=\"icon\">\r\n                <FontAwesomeIcon icon={faQuestion} size=\"3x\" color=\"orange\" />\r\n            </div>\r\n            <div className=\"square-name\"> CHANCE</div>\r\n        </React.Fragment>\r\n    );\r\n\r\n};","import React from \"react\";\r\nimport { SquareConfigData, squareGroupColorMap } from \"../SquareData\";\r\n\r\ninterface Props {\r\n    id: number;\r\n}\r\n\r\nexport const ColorBar: React.FC<Props> = ({ id }) => {\r\n\r\n    const groupId: number = SquareConfigData.get(id)?.groupId!;\r\n\r\n    const getClassName = () => {\r\n        return \"square-color-bar \" + squareGroupColorMap.get(groupId);\r\n    };\r\n\r\n    return (\r\n        <div className={getClassName()}></div>\r\n    );\r\n\r\n};","import React from \"react\";\r\nimport { NyThemeData } from \"../NyTheme\";\r\nimport { ColorBar } from \"./ColorBar\";\r\n\r\ninterface Props {\r\n    id: number;\r\n}\r\n\r\nexport const PropertyDisplay: React.FC<Props> = ({ id }) => {\r\n\r\n    const txt: string | undefined = NyThemeData.get(id)?.name;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ColorBar id={id} />\r\n            <div className=\"square-name\">{txt}</div>\r\n        </React.Fragment>\r\n    );\r\n\r\n};","import React from \"react\";\r\n\r\ninterface Props {\r\n    id: number;\r\n}\r\n\r\nexport const CentralParkDisplay: React.FC<Props> = ({ id }) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"icon\"></div>\r\n            <div className=\"square-name\"> central park</div>\r\n        </React.Fragment>\r\n    );\r\n\r\n};","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHandPointLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\ninterface Props {\r\n    id: number;\r\n}\r\n\r\nexport const GoDisplay: React.FC<Props> = ({ id }) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"blank\"></div>\r\n            <div className=\"icon\">\r\n                <FontAwesomeIcon icon={faHandPointLeft} color=\"green\" />\r\n            </div>\r\n            <div className=\"square-name\">GO</div>\r\n        </React.Fragment>\r\n    );\r\n\r\n};","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLightbulb } from '@fortawesome/free-solid-svg-icons'\r\nimport { faSubway } from '@fortawesome/free-solid-svg-icons'\r\nimport { NyThemeData } from \"../NyTheme\";\r\n\r\ninterface Props {\r\n    id: number;\r\n}\r\n\r\nexport const UtilityDisplay: React.FC<Props> = ({ id }) => {\r\n\r\n    const txt: string | undefined = NyThemeData.get(id)?.name;\r\n    const icon: string | undefined = NyThemeData.get(id)?.icon;\r\n\r\n\r\n    const getSubwayCompany = () => {\r\n        return (<React.Fragment>\r\n            <div className=\"blank\"></div>\r\n            <div className=\"icon\">\r\n                <FontAwesomeIcon icon={faSubway} size=\"3x\" color=\"blue\" />\r\n            </div>\r\n            <div className=\"square-name\"> {txt}</div>\r\n        </React.Fragment>);\r\n    };\r\n\r\n    const getElectricCompany = () => {\r\n        return (<React.Fragment>\r\n            <div className=\"blank\"></div>\r\n            <div className=\"icon\">\r\n                <FontAwesomeIcon icon={faLightbulb} size=\"3x\" color=\"blue\" />\r\n            </div>\r\n            <div className=\"square-name\"> {txt}</div>\r\n        </React.Fragment>);\r\n    };\r\n\r\n\r\n    return (\r\n        icon === \"subway\" ? getSubwayCompany() : getElectricCompany()\r\n    );\r\n\r\n};","import React from \"react\";\r\nimport { SquareConfigData } from \"./SquareData\";\r\nimport { SquareType } from \"./SquareType\";\r\nimport { AirportDisplay } from \"./squares/AirportDisplay\";\r\nimport { ChanceDisplay } from \"./squares/ChanceDisplay\";\r\nimport { PropertyDisplay } from \"./squares/PropertyDisplay\";\r\nimport { CentralParkDisplay } from \"./squares/CentralParkDisplay\";\r\nimport { GoDisplay } from \"./squares/GoDisplay\";\r\nimport { UtilityDisplay } from \"./squares/UtilityDisplay\";\r\n\r\n\r\ninterface Props {\r\n    id: number;\r\n}\r\n\r\nexport const SquareInfo: React.FC<Props> = ({ id }) => {\r\n\r\n    const type: SquareType | undefined = SquareConfigData.get(id)?.type;\r\n\r\n    const getInfo = () => {\r\n        if (type === SquareType.Airport) {\r\n            return <AirportDisplay id={id} />\r\n        }\r\n        if (type === SquareType.Chance) {\r\n            return <ChanceDisplay id={id} />\r\n        }\r\n        if (type === SquareType.CentralPark) {\r\n            return <CentralParkDisplay id={id} />\r\n        }\r\n        if (type === SquareType.Go) {\r\n            return <GoDisplay id={id} />\r\n        }\r\n        if (type === SquareType.Utility) {\r\n            return <UtilityDisplay id={id} />\r\n        }\r\n\r\n        if (type === SquareType.Jail || type === SquareType.GoToJail) {\r\n            return null;\r\n        }\r\n\r\n        return <PropertyDisplay id={id} />\r\n    };\r\n\r\n\r\n    return (\r\n        getInfo()\r\n    );\r\n\r\n};","import React from \"react\";\r\nimport { BoardSection } from \"./BoardSection\";\r\nimport { SquareConfigData } from \"./SquareData\";\r\nimport { SquareInfo } from \"./SquareInfo\";\r\nimport { SquareType } from \"./SquareType\";\r\n\r\ninterface Props {\r\n  id: number;\r\n}\r\n\r\nexport const GameSquare: React.FC<Props> = ({ id }) => {\r\n\r\n  const section: BoardSection = SquareConfigData.get(id)?.section!;\r\n  const squareType: SquareType = SquareConfigData.get(id)?.type!;\r\n\r\n  const sectionMap = new Map<BoardSection, string>([\r\n    [BoardSection.Top, \"top\"], [BoardSection.Right, \"right\"], [BoardSection.Left, \"left\"], [BoardSection.Bottom, \"bottom\"]\r\n  ]);\r\n\r\n  const squareTypeClass = new Map<SquareType, string>([\r\n    [SquareType.Airport, \"airport\"], [SquareType.Chance, \"chance\"], [SquareType.Go, \"passgo\"],\r\n    [SquareType.GoToJail, \"go-to-jail\"], [SquareType.Jail, \"jail\"], [SquareType.Property, \"property\"],\r\n    [SquareType.CentralPark, \"central-park\"], [SquareType.Utility, \"utility\"]\r\n  ]);\r\n\r\n  const getContainerClassName = () => {\r\n    return \"container container-\" + sectionMap.get(section);\r\n  };\r\n\r\n  const getSquareClassName = () => {\r\n    return \"square \" + squareTypeClass.get(squareType);\r\n  };\r\n\r\n  const getSquareId = () => {\r\n    return \"game-square-\" + id;\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={getSquareClassName()} id={getSquareId()}>\r\n      <div className={getContainerClassName()}>\r\n        <SquareInfo id={id} />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n","import React from \"react\";\r\nimport { GameSquare } from \"./GameSquare\";\r\n\r\nexport default function GameBoard() {\r\n  const num_squares: Array<number> = Array.from(Array(40));\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"board\">\r\n\r\n        {num_squares.map((n, index) => {\r\n          const id: number = index + 1;\r\n\r\n          return (<GameSquare\r\n            id={id}\r\n            key={id}\r\n          />)\r\n        })}\r\n\r\n\r\n        <div className=\"center-square square\">\r\n          <div className=\"center-txt\">\r\n            <a href=\"https://www.coderdreams.com/\">Visit CoderDreams to learn more</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\n\nimport GameBoard from \"./client/GameBoard\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n\n      <GameBoard />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}